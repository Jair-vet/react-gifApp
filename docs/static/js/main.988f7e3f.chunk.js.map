{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","text","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA0B/BZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,mCChCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEyCC,UAAUH,GAFnD,gEAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcRM,GAdQ,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEnB,ECJqB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAIEqB,EDnB8BK,CAAc1B,GAAnCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAExB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAA0DhB,EAA1D,OAEEoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBzBgB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAC,WAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAOA,OACI,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAF/B,MAGE,uBAIE,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.988f7e3f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length >2 ){  // trim() => Borramos los espacios, en blanco que pueda tener\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n\n        // console.log('Submit Done');\n    }\n\n    //  <h1> {inputValue} </h1>   siempre sera el valor mas actualizado \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                text=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propType = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n","\n\nexport const getGifs = async( category ) => {\n\n        const url  = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }i&limit=10&api_key=TKHBjC91KjOz71uoBwTXUAJd3nfE65rA`\n        const resp = await fetch( url );\n        const {data} = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n\n        return gifs;\n\n}\n\n\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\n\nexport const GifGrid = ({ category }) => {\n\n       const { data:images, loading } =  useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__fadeIn\"> { category } </h3>\n             \n             {loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n   // Hace que la funciÃ³n se realice una unica vez\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    }, [ category ])\n\n   \n\n    return state;\n\n}\n\n\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['icarly']);\n\n    // const handleAdd = () => {\n    //     //    setCategories([...categories, 'Samurai']);  // Mantengo las categorias y Agrego una Nueva\n    //     setCategories( cats => [...cats, 'SamuraiX2']);\n    // }\n\n    return (\n        <>\n          <h2>GiftExpertApp</h2>\n          <AddCategory setCategories={ setCategories } />   {/* Importamos otro Componente*/}\n          <hr/> \n\n          {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            <ol>\n                { \n                    categories.map( category => \n                        <GifGrid \n                            key={ category }\n                            category={ category } \n                        />\n                        // <li key={ category }> {category} </li> // El Key debe ser unico\n                    ) \n                }\n            </ol>\n          \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}